"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/is-array-buffer";
exports.ids = ["vendor-chunks/is-array-buffer"];
exports.modules = {

/***/ "(ssr)/./node_modules/is-array-buffer/index.js":
/*!***********************************************!*\
  !*** ./node_modules/is-array-buffer/index.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar callBind = __webpack_require__(/*! call-bind */ \"(ssr)/./node_modules/call-bind/index.js\");\nvar callBound = __webpack_require__(/*! call-bound */ \"(ssr)/./node_modules/call-bound/index.js\");\nvar GetIntrinsic = __webpack_require__(/*! get-intrinsic */ \"(ssr)/./node_modules/get-intrinsic/index.js\");\n\nvar $ArrayBuffer = GetIntrinsic('%ArrayBuffer%', true);\n/** @type {undefined | ((receiver: ArrayBuffer) => number) | ((receiver: unknown) => never)} */\nvar $byteLength = callBound('ArrayBuffer.prototype.byteLength', true);\nvar $toString = callBound('Object.prototype.toString');\n\n// in node 0.10, ArrayBuffers have no prototype methods, but have an own slot-checking `slice` method\nvar abSlice = !!$ArrayBuffer && !$byteLength && new $ArrayBuffer(0).slice;\nvar $abSlice = !!abSlice && callBind(abSlice);\n\n/** @type {import('.')} */\nmodule.exports = $byteLength || $abSlice\n\t? function isArrayBuffer(obj) {\n\t\tif (!obj || typeof obj !== 'object') {\n\t\t\treturn false;\n\t\t}\n\t\ttry {\n\t\t\tif ($byteLength) {\n\t\t\t\t// @ts-expect-error no idea why TS can't handle the overload\n\t\t\t\t$byteLength(obj);\n\t\t\t} else {\n\t\t\t\t// @ts-expect-error TS chooses not to type-narrow inside a closure\n\t\t\t\t$abSlice(obj, 0);\n\t\t\t}\n\t\t\treturn true;\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t}\n\t: $ArrayBuffer\n\t\t// in node 0.8, ArrayBuffers have no prototype or own methods, but also no Symbol.toStringTag\n\t\t? function isArrayBuffer(obj) {\n\t\t\treturn $toString(obj) === '[object ArrayBuffer]';\n\t\t}\n\t\t// @ts-expect-error\n\t\t: function isArrayBuffer(obj) { // eslint-disable-line no-unused-vars\n\t\t\treturn false;\n\t\t};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaXMtYXJyYXktYnVmZmVyL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLGVBQWUsbUJBQU8sQ0FBQywwREFBVztBQUNsQyxnQkFBZ0IsbUJBQU8sQ0FBQyw0REFBWTtBQUNwQyxtQkFBbUIsbUJBQU8sQ0FBQyxrRUFBZTs7QUFFMUM7QUFDQSxXQUFXLGtGQUFrRjtBQUM3RjtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxXQUFXLGFBQWE7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQztBQUNsQztBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvdGVzdC9Eb2N1bWVudHMvR2l0SHViL2xlYWZ5X2ZhY3RvcnkvZnJvbnRlbmQvc3JjL25vZGVfbW9kdWxlcy9pcy1hcnJheS1idWZmZXIvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgY2FsbEJpbmQgPSByZXF1aXJlKCdjYWxsLWJpbmQnKTtcbnZhciBjYWxsQm91bmQgPSByZXF1aXJlKCdjYWxsLWJvdW5kJyk7XG52YXIgR2V0SW50cmluc2ljID0gcmVxdWlyZSgnZ2V0LWludHJpbnNpYycpO1xuXG52YXIgJEFycmF5QnVmZmVyID0gR2V0SW50cmluc2ljKCclQXJyYXlCdWZmZXIlJywgdHJ1ZSk7XG4vKiogQHR5cGUge3VuZGVmaW5lZCB8ICgocmVjZWl2ZXI6IEFycmF5QnVmZmVyKSA9PiBudW1iZXIpIHwgKChyZWNlaXZlcjogdW5rbm93bikgPT4gbmV2ZXIpfSAqL1xudmFyICRieXRlTGVuZ3RoID0gY2FsbEJvdW5kKCdBcnJheUJ1ZmZlci5wcm90b3R5cGUuYnl0ZUxlbmd0aCcsIHRydWUpO1xudmFyICR0b1N0cmluZyA9IGNhbGxCb3VuZCgnT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZycpO1xuXG4vLyBpbiBub2RlIDAuMTAsIEFycmF5QnVmZmVycyBoYXZlIG5vIHByb3RvdHlwZSBtZXRob2RzLCBidXQgaGF2ZSBhbiBvd24gc2xvdC1jaGVja2luZyBgc2xpY2VgIG1ldGhvZFxudmFyIGFiU2xpY2UgPSAhISRBcnJheUJ1ZmZlciAmJiAhJGJ5dGVMZW5ndGggJiYgbmV3ICRBcnJheUJ1ZmZlcigwKS5zbGljZTtcbnZhciAkYWJTbGljZSA9ICEhYWJTbGljZSAmJiBjYWxsQmluZChhYlNsaWNlKTtcblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4nKX0gKi9cbm1vZHVsZS5leHBvcnRzID0gJGJ5dGVMZW5ndGggfHwgJGFiU2xpY2Vcblx0PyBmdW5jdGlvbiBpc0FycmF5QnVmZmVyKG9iaikge1xuXHRcdGlmICghb2JqIHx8IHR5cGVvZiBvYmogIT09ICdvYmplY3QnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXHRcdHRyeSB7XG5cdFx0XHRpZiAoJGJ5dGVMZW5ndGgpIHtcblx0XHRcdFx0Ly8gQHRzLWV4cGVjdC1lcnJvciBubyBpZGVhIHdoeSBUUyBjYW4ndCBoYW5kbGUgdGhlIG92ZXJsb2FkXG5cdFx0XHRcdCRieXRlTGVuZ3RoKG9iaik7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHQvLyBAdHMtZXhwZWN0LWVycm9yIFRTIGNob29zZXMgbm90IHRvIHR5cGUtbmFycm93IGluc2lkZSBhIGNsb3N1cmVcblx0XHRcdFx0JGFiU2xpY2Uob2JqLCAwKTtcblx0XHRcdH1cblx0XHRcdHJldHVybiB0cnVlO1xuXHRcdH0gY2F0Y2ggKGUpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cdH1cblx0OiAkQXJyYXlCdWZmZXJcblx0XHQvLyBpbiBub2RlIDAuOCwgQXJyYXlCdWZmZXJzIGhhdmUgbm8gcHJvdG90eXBlIG9yIG93biBtZXRob2RzLCBidXQgYWxzbyBubyBTeW1ib2wudG9TdHJpbmdUYWdcblx0XHQ/IGZ1bmN0aW9uIGlzQXJyYXlCdWZmZXIob2JqKSB7XG5cdFx0XHRyZXR1cm4gJHRvU3RyaW5nKG9iaikgPT09ICdbb2JqZWN0IEFycmF5QnVmZmVyXSc7XG5cdFx0fVxuXHRcdC8vIEB0cy1leHBlY3QtZXJyb3Jcblx0XHQ6IGZ1bmN0aW9uIGlzQXJyYXlCdWZmZXIob2JqKSB7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW51c2VkLXZhcnNcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/is-array-buffer/index.js\n");

/***/ })

};
;